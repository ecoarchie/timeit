// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: athlete_split.sql

package database

import (
	"context"

	"github.com/ecoarchie/timeit/internal/entity"
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createAthleteSplits = `-- name: CreateAthleteSplits :exec
INSERT INTO athlete_split
(race_id, event_id, split_id, athlete_id, tod, gun_time, net_time)
VALUES($1, $2, $3, $4, $5, $6, $7)
ON CONFLICT (race_id, event_id, split_id, athlete_id) DO UPDATE
SET tod=EXCLUDED.tod, gun_time=EXCLUDED.gun_time, net_time=EXCLUDED.net_time
`

type CreateAthleteSplitsParams struct {
	RaceID    uuid.UUID
	EventID   uuid.UUID
	SplitID   uuid.UUID
	AthleteID uuid.UUID
	Tod       pgtype.Timestamp
	GunTime   entity.Duration
	NetTime   entity.Duration
}

func (q *Queries) CreateAthleteSplits(ctx context.Context, arg CreateAthleteSplitsParams) error {
	_, err := q.db.Exec(ctx, createAthleteSplits,
		arg.RaceID,
		arg.EventID,
		arg.SplitID,
		arg.AthleteID,
		arg.Tod,
		arg.GunTime,
		arg.NetTime,
	)
	return err
}
