// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: chip_bib.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const addChipBib = `-- name: AddChipBib :one
INSERT INTO chip_bib
(race_id, event_id, chip, bib)
VALUES ($1, $2, $3, $4)
RETURNING race_id, event_id, chip, bib
`

type AddChipBibParams struct {
	RaceID  uuid.UUID
	EventID uuid.UUID
	Chip    int32
	Bib     int32
}

func (q *Queries) AddChipBib(ctx context.Context, arg AddChipBibParams) (ChipBib, error) {
	row := q.db.QueryRow(ctx, addChipBib,
		arg.RaceID,
		arg.EventID,
		arg.Chip,
		arg.Bib,
	)
	var i ChipBib
	err := row.Scan(
		&i.RaceID,
		&i.EventID,
		&i.Chip,
		&i.Bib,
	)
	return i, err
}

const deleteChipBib = `-- name: DeleteChipBib :exec
DELETE FROM chip_bib
WHERE race_id=$1 AND chip=$2 and bib=$3
`

type DeleteChipBibParams struct {
	RaceID uuid.UUID
	Chip   int32
	Bib    int32
}

func (q *Queries) DeleteChipBib(ctx context.Context, arg DeleteChipBibParams) error {
	_, err := q.db.Exec(ctx, deleteChipBib, arg.RaceID, arg.Chip, arg.Bib)
	return err
}
